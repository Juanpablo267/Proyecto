{"version":3,"file":"index.d.ts","sources":["index.d.ts"],"names":[],"mappingssourcesContent":["import { IonicNativePlugin } from '@ionic-native/core';\n/**\n * @name Google Analytics\n * @description\n * This plugin connects to Google's native Universal Analytics SDK\n * Prerequisites:\n * - A Cordova 3.0+ project for iOS and/or Android\n * - A Mobile App property through the Google Analytics Admin Console\n * - (Android) Google Play Services SDK installed via [Android SDK Manager](https://developer.android.com/sdk/installing/adding-packages.html)\n * @usage\n * ```typescript\n * import { GoogleAnalytics } from '@ionic-native/google-analytics/ngx';\n *\n * constructor(private ga: GoogleAnalytics) { }\n *\n * ...\n *\n * this.ga.startTrackerWithId('YOUR_TRACKER_ID')\n *    .then(() => {\n *      console.log('Google analytics is ready now');\n *       this.ga.trackView('test');\n *      // Tracker is ready\n *      // You can now track pages or set additional information such as AppVersion or UserId\n *    })\n *    .catch(e => console.log('Error starting GoogleAnalytics', e));\n *\n *\n * ```\n */\nexport declare class GoogleAnalytics extends IonicNativePlugin {\n    /**\n     * In your 'deviceready' handler, set up your Analytics tracker.\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/\n     * @param {string}  id  Your Google Analytics Mobile App property\n     * @param {number} interval Optional dispatch period in seconds. Defaults to 30.\n     * @returns {Promise<any>}\n     */\n    startTrackerWithId(id: string, interval?: number): Promise<any>;\n    /**\n     * Enabling Advertising Features in Google Analytics allows you to take advantage of Remarketing, Demographics & Interests reports, and more\n     * @param allow {boolean}\n     * @returns {Promise<any>}\n     */\n    setAllowIDFACollection(allow: boolean): Promise<any>;\n    /**\n     * Set a UserId\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/user-id\n     * @param {string} id User ID\n     * @returns {Promise<any>}\n     */\n    setUserId(id: string): Promise<any>;\n    /**\n     * Set a anonymize Ip address\n     * @param anonymize {boolean} Set to true to anonymize the IP Address\n     * @returns {Promise<any>}\n     */\n    setAnonymizeIp(anonymize: boolean): Promise<any>;\n    /**\n     * Set the app version\n     * @param appVersion {string} App version\n     * @returns {Promise<any>}\n     */\n    setAppVersion(appVersion: string): Promise<any>;\n    /**\n     * Get a variable\n     * @param key {string} Variable\n     * @returns {Promise<any>}\n     */\n    getVar(key: string): Promise<any>;\n    /**\n     * Set a variable\n     * @param key {string} Variable\n     * @param value {string} Parameter\n     * @returns {Promise<any>}\n     */\n    setVar(key: string, value: string): Promise<any>;\n    /**\n     * Set OptOut\n     * @param optout {boolean}\n     * @returns {Promise<any>}\n     */\n    setOptOut(optout: boolean): Promise<any>;\n    /**\n     * Enable verbose logging\n     * @returns {Promise<any>}\n     */\n    debugMode(): Promise<any>;\n    /**\n     * Track custom metric\n     * @param key {number}\n     * @param value {any}\n     * @returns {Promise<any>}\n     */\n    trackMetric(key: number, value?: number): Promise<any>;\n    /**\n     * Track a screen\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/screens\n     *\n     * @param title {string} Screen title\n     * @param campaignUrl {string} Campaign url for measuring referrals\n     * @param newSession {boolean} Set to true to create a new session\n     * @returns {Promise<any>}\n     */\n    trackView(title: string, campaignUrl?: string, newSession?: boolean): Promise<any>;\n    /**\n     * Add a Custom Dimension\n     * https://developers.google.com/analytics/devguides/platform/customdimsmets\n     * @param key {number}\n     * @param value {string}\n     * @returns {Promise<any>}\n     */\n    addCustomDimension(key: number, value: string): Promise<any>;\n    /**\n     * Track an event\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n     * @param category {string}\n     * @param action {string}\n     * @param label {string}\n     * @param value {number}\n     * @param newSession {boolean} Set to true to create a new session\n     * @returns {Promise<any>}\n     */\n    trackEvent(category: string, action: string, label?: string, value?: number, newSession?: boolean): Promise<any>;\n    /**\n     * Track an exception\n     * @param description {string}\n     * @param fatal {boolean}\n     * @returns {Promise<any>}\n     */\n    trackException(description: string, fatal: boolean): Promise<any>;\n    /**\n     * Track User Timing (App Speed)\n     * @param category {string}\n     * @param intervalInMilliseconds {number}\n     * @param variable {string}\n     * @param label {string}\n     * @returns {Promise<any>}\n     */\n    trackTiming(category: string, intervalInMilliseconds: number, variable: string, label: string): Promise<any>;\n    /**\n     * Add a Transaction (Ecommerce)\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addTrans\n     * @param id {string}\n     * @param affiliation {string}\n     * @param revenue {number}\n     * @param tax {number}\n     * @param shipping {number}\n     * @param currencyCode {string}\n     * @returns {Promise<any>}\n     */\n    addTransaction(id: string, affiliation: string, revenue: number, tax: number, shipping: number, currencyCode: string): Promise<any>;\n    /**\n     * Add a Transaction Item (Ecommerce)\n     * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addItem\n     * @param {string}  id\n     * @param {string}  name\n     * @param {string}  sku\n     * @param {string}  category\n     * @param {number}  price\n     * @param {number}  quantity\n     * @param {string}  currencyCode\n     * @returns {Promise<any>}\n     */\n    addTransactionItem(id: string, name: string, sku: string, category: string, price: number, quantity: number, currencyCode: string): Promise<any>;\n    /**\n     * Enable/disable automatic reporting of uncaught exceptions\n     * @param shouldEnable {boolean}\n     * @returns {Promise<any>}\n     */\n    enableUncaughtExceptionReporting(shouldEnable: boolean): Promise<any>;\n    /**\n     * Manually dispatch any data\n     * @returns {Promise<any>}\n     * @platform\n     */\n    dispatch(): Promise<any>;\n}\n"]}